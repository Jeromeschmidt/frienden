from django.conf import settings
from django.db import models
from django.urls import reverse
from django.utils.text import slugify
from django.utils import timezone
from django.contrib.auth.models import User
from django.forms import ModelForm
from django.forms import modelform_factory


class Person(models.Model):
    first_name = models.CharField(max_length=30)
    last_name = models.CharField(max_length=30)
    Bio = models.CharField(max_length=500)
    slug = models.CharField(max_length=600, blank=True, editable=False,
                            help_text="Unique URL path to access this page. Generated by the system.")
    bool = (
        ('F', 'False'),
        ('T', 'True'),
    )
    Have_room_available = models.CharField(max_length=1, choices=bool)
    min_rent = models.IntegerField()
    max_rent = models.IntegerField()
    pub_date = models.DateTimeField('date published')

    def __str__(self):
        return self.last_name

    def get_absolute_url(self):
        """ Returns a fully-qualified path for a page (/my-new-person-page). """
        path_components = {'slug': self.slug}
        return reverse('person-details-page', kwargs=path_components)

    def save(self, *args, **kwargs):
        """ Creates a URL safe slug automatically when a new a page is created. """
        if not self.pk:
            self.slug = slugify(self.last_name, allow_unicode=True)

        # Call save on the superclass.
        return super(Person, self).save(*args, **kwargs)

class NewPage(ModelForm):
    class Meta:
        model = Person
        fields = ['last_name', 'Bio']


class Room(models.Model):
    person = models.ForeignKey(Person, on_delete=models.CASCADE)
    choice_text = models.CharField(max_length=200)
    votes = models.IntegerField(default=0)
